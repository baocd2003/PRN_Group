@page
@model ICQS_Management.Pages.BatchDetailsManagement.CreateModel

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>BatchDetail</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post" id="materialForm" asp-page-handler="ChooseMaterial" method="post">
            <div class="form-group">
                <label class="control-label">Material</label>
                <select name="MaterialId" class="form-control" asp-items="ViewBag.MaterialId" onchange="submitForm(this)"></select>
            </div>
        </form>
        <div class="form-group">
            <label>Unit</label>
            <input asp-for="MaterialType.UnitType" readonly />
        </div>
        <form method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="BatchDetail.Quantity" class="control-label"></label>
                <input asp-for="BatchDetail.Quantity" class="form-control" min="1" required type="number"/>
                <span asp-validation-for="BatchDetail.Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BatchDetail.Price" class="control-label"></label>
                <input asp-for="BatchDetail.Price" class="form-control" min="1" required type="number"/>
                <span asp-validation-for="BatchDetail.Price" class="text-danger"></span>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="checkbox" id="continueCheckbox" name="continueCheckbox">
                <label class="form-check-label" for="continueCheckbox">
                    Continue to add
                </label>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

@if (HttpContext.Session.GetString("detailList") != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.BatchDetails[0].Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BatchDetails[0].Price)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.BatchDetails[0].MaterialName)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.BatchDetails)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Price)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.MaterialName)
                    </td>
                    <td>
                        <a asp-page="./EditCheckout" asp-route-index="@Model.BatchDetails.IndexOf(item)">Edit</a> |
                        <a asp-page="./RemoveCheckout" asp-route-index="@Model.BatchDetails.IndexOf(item)">Delete</a>
                    </td>
                    
                </tr>
            }
        </tbody>
    </table>
}
<div>
    <a asp-page="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}

<script>
    function submitForm(selectElement) {
        var selectedOption = selectElement.options[selectElement.selectedIndex];
        var materialTypeId = selectedOption.value;
        document.getElementById('materialForm').submit();
    }
</script>
